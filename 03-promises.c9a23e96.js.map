{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,SAErC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPL,EAAMY,iBAAiB,UAAU,SAAAC,GAC/BA,EAAMC,iBAMN,IAJA,IAAMT,EAAQU,SAASf,EAAMK,MAAMW,OAC7BC,EAAOF,SAASf,EAAMiB,KAAKD,OAC3BE,EAASH,SAASf,EAAMkB,OAAOF,OAE5BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BhB,EAAcgB,EAAG,EADId,EAAQc,EAAIF,GAE9BG,MAAK,SAAAJ,GACJK,EAAAvB,GAASwB,OAAOC,QAAQ,qBAA0CC,OAArBR,EAAMZ,SAAS,QAAkBoB,OAAZR,EAAMX,MAAM,M,IAE/EoB,OAAM,SAAAC,GACLL,EAAAvB,GAASwB,OAAOK,QAAQ,oBAAyCH,OAArBE,EAAMtB,SAAS,QAAkBoB,OAAZE,EAAMrB,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst input = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ninput.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delay = parseInt(input.delay.value);\n  const step = parseInt(input.step.value);\n  const amount = parseInt(input.amount.value);\n\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = delay + i * step;\n    createPromise(i+ 1, currentDelay)\n      .then(value => {\n        Notiflix.Notify.success(`Fulfilled promise ${value.position} in ${value.delay}ms`);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(`Rejected promise ${error.position} in ${error.delay}ms`);\n      });\n  }\n});"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$input","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","parseInt","value","step","amount","i","then","$parcel$interopDefault","Notify","success","concat","catch","error","failure"],"version":3,"file":"03-promises.c9a23e96.js.map"}